{"ast":null,"code":"export function calcInvestment({\n  initialInvestment,\n  annualInvestment,\n  expectedReturn,\n  duration\n}) {\n  const annualData = [];\n  let investmentValue = initialInvestment;\n  for (let i = 0; i < duration; i++) {\n    const interestEearnedInYear = investmentValue * expectedReturn;\n    investmentValue += interestEearnedInYear + annualInvestment;\n    annualData.push({\n      year: i + 1,\n      interest: interestEearnedInYear,\n      valueEndOfYear: investmentValue,\n      annualInvestment: annualInvestment\n    });\n  }\n  return annualData; // Return the array of annual data\n}\nexport const formatter = new Intl.NumberFormat('en-ET', {\n  // FOR THE DOLLAR USE en-US AND  currency: 'USD',\n  style: 'currency',\n  currency: 'ETB',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});","map":{"version":3,"names":["calcInvestment","initialInvestment","annualInvestment","expectedReturn","duration","annualData","investmentValue","i","interestEearnedInYear","push","year","interest","valueEndOfYear","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits"],"sources":["C:/APPLICATIONS/investmentcalculetor/inv_calc/src/Components/CalculateInvestment.js"],"sourcesContent":["\r\nexport  function calcInvestment({\r\n    initialInvestment,\r\n        annualInvestment,\r\n        expectedReturn,\r\n        duration,\r\n}){\r\n    const annualData =[];\r\n    let investmentValue= initialInvestment;\r\n\r\n    for(let i =0; i< duration ; i++){\r\n        const interestEearnedInYear = investmentValue * expectedReturn;\r\n        investmentValue += interestEearnedInYear + annualInvestment;\r\n\r\n        annualData.push({\r\n            year : i +1,\r\n            interest:interestEearnedInYear ,\r\n            valueEndOfYear:investmentValue,\r\n            annualInvestment:annualInvestment,\r\n        })\r\n\r\n    }\r\n\r\n    return annualData; // Return the array of annual data\r\n\r\n}\r\n\r\n\r\n\r\nexport const formatter = new Intl.NumberFormat('en-ET',{   // FOR THE DOLLAR USE en-US AND  currency: 'USD',\r\n    style: 'currency',\r\n    currency: 'ETB',\r\n    minimumFractionDigits:0,\r\n    maximumFractionDigits:0\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AACA,OAAQ,SAASA,cAAcA,CAAC;EAC5BC,iBAAiB;EACbC,gBAAgB;EAChBC,cAAc;EACdC;AACR,CAAC,EAAC;EACE,MAAMC,UAAU,GAAE,EAAE;EACpB,IAAIC,eAAe,GAAEL,iBAAiB;EAEtC,KAAI,IAAIM,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAEH,QAAQ,EAAGG,CAAC,EAAE,EAAC;IAC5B,MAAMC,qBAAqB,GAAGF,eAAe,GAAGH,cAAc;IAC9DG,eAAe,IAAIE,qBAAqB,GAAGN,gBAAgB;IAE3DG,UAAU,CAACI,IAAI,CAAC;MACZC,IAAI,EAAGH,CAAC,GAAE,CAAC;MACXI,QAAQ,EAACH,qBAAqB;MAC9BI,cAAc,EAACN,eAAe;MAC9BJ,gBAAgB,EAACA;IACrB,CAAC,CAAC;EAEN;EAEA,OAAOG,UAAU,CAAC,CAAC;AAEvB;AAIA,OAAO,MAAMQ,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAC;EAAI;EACvDC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE,KAAK;EACfC,qBAAqB,EAAC,CAAC;EACvBC,qBAAqB,EAAC;AAC1B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}